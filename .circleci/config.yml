# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: npm i
      - save_cache:
          key: "npm-packages"
          paths:
            - /src/modules/
      - run:
          name: "Say Build"
          command: "npm run lint"
  test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          key:  "npm-pakages"
      - run: npm i
      - run:
          name: "Say Test"
          command: "npm run test"
  analyze:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say Audit"
          command: "npm audit fix"
 
  
  configure_infrastructure:
      docker:
        - image: python:3.7-alpine3.11
      
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints: ["58:45:86:30:67:18:96:3b:8e:1e:f3:c7:4d:7a:00:6e"] # You can get this ID in the section where you registered the SSH Key

        - run:
            name: Install Ansible
            command: |
              # Install Ansible
              apk add --update ansible
        - run:
            name: Configure WebApp
            command: |
              ansible-playbook -i inventory main-remote.yml
  
  smoke_test:
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - run: apk add --update curl
        - run:
            name: smoke test
            command: |
              URL="https://blog.udacity1.com/"
              # Test if website exists
              if curl -s --head ${URL} 
              then
                return 0
              else
                return 1
              fi

        - destroy_environment  
              
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - build
      #Depenency
      - test:
          requires: [build]
      - analyze:
          requires: [test]
      
      - smoke_test
      
